# Reusable GitLab CI template for NTU Security Scanner
# Usage from another project (example):
# include:
#   - project: 'openpulsetech/neotrak-action-gitlab'
#     ref: 'gitlab-action'
#     file: '/.gitlab-ci-templates/security_scan_template.yml'
#
# This template runs the Node-based scanner located at the root of the
# included project. It expects to be able to check out the repo (GitLab
# will fetch the file content from the target project/branch). If the
# target project is private, the including project must have permission
# to read it.

variables:
  # These can be overridden by the including project
  SCAN_TYPE: "fs"
  SCAN_TARGET: "."
  SEVERITY: "HIGH,CRITICAL"
  IGNORE_UNFIXED: "false"
  EXIT_CODE: "1"

ntu_security_scan_template:
  stage: security
  image: node:18-slim

  before_script:
    # Minimal system utilities used by scanner installers (Trivy downloader)
    - apt-get update && apt-get install -y --no-install-recommends curl unzip tar ca-certificates && rm -rf /var/lib/apt/lists/*

    # Use npm ci when package-lock.json exists for reproducible builds
    - if [ -f package-lock.json ]; then npm ci; else npm install; fi

  script:
    # Run the scanner. The scanner reads INPUT_* env vars or plain uppercase names.
    - node index.js

  artifacts:
    reports:
      dotenv: scan-outputs.env
    paths:
      - scan-results.json
      - scan-outputs.env
    when: always
    expire_in: 30 days

  rules:
    # Run on MR pipelines and on default branch by default; including project can override rules
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

  allow_failure: false
